{"version":3,"sources":["redux/phonebook/phonebook-slices.js","redux/store.js","Components/Container/Container.styled.jsx","Components/Container/Container.jsx","Components/Form/Form.styled.jsx","Components/Form/Form.jsx","redux/phonebook/phonebook-selectors.js","Components/ContactList/ContactList.styled.jsx","Components/ContactItem/ContactItem.styled.jsx","Components/ContactItem/ContactItem.jsx","Components/ContactList/ContactList.jsx","Components/Filter/Filter.styled.jsx","Components/Filter/Filter.jsx","App.js","reportWebVitals.js","index.js"],"names":["getContacts","createAsyncThunk","a","axios","get","result","data","addContact","newContact","result1","contactNames","map","contact","name","indexOf","toast","error","post","console","log","deleteContact","id","delete","contactsSlice","createSlice","initialState","items","status","extraReducers","fulfilled","state","payload","pending","_","rejected","message","success","filter","filterSlice","reducers","filterContacts","contacts","reducer","actions","phonebookReducer","combineReducers","store","configureStore","phonebook","devTools","process","CustomContainer","Container","children","CustomForm","Form","useState","setName","number","setNumber","dispatch","useDispatch","handleChange","e","target","value","onSubmit","preventDefault","htmlFor","type","pattern","title","required","onChange","getFilter","getStatus","getError","getVisibleContacts","createSelector","normalizedFilter","toLowerCase","includes","CustomContactList","ListContactEl","ContactItem","isDeleting","setIsDeleting","onClick","color","height","width","ContactList","useSelector","useEffect","FilterContainer","customId","shortid","generate","Filter","event","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.45521729.chunk.js","sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\nimport { toast } from 'react-hot-toast';\r\n\r\nconst itemsInitialState = { items: [], status: null, error: null };\r\nconst filterInitialState = '';\r\n\r\nexport const getContacts = createAsyncThunk(\r\n  'contacts/getContacts',\r\n  async () => {\r\n    const result = await axios.get(\r\n      'https://6129fa91068adf001789b9d3.mockapi.io/contacts',\r\n    );\r\n    return result.data;\r\n  },\r\n);\r\n\r\nexport const addContact = createAsyncThunk(\r\n  'contacts/addContact',\r\n  async newContact => {\r\n    const result1 = await axios.get(\r\n      'https://6129fa91068adf001789b9d3.mockapi.io/contacts',\r\n    );\r\n    const contactNames = result1.data.map(contact => contact.name);\r\n    const isRepeat = contactNames.indexOf(newContact.name) !== -1;\r\n\r\n    if (isRepeat) {\r\n      toast.error(`${newContact.name} is already in Contacts`);\r\n      return;\r\n    } else {\r\n      const result = await axios.post(\r\n        'https://6129fa91068adf001789b9d3.mockapi.io/contacts',\r\n        newContact,\r\n      );\r\n      console.log(result.data);\r\n      return result.data;\r\n    }\r\n  },\r\n);\r\n\r\nexport const deleteContact = createAsyncThunk('contacts/delete', async id => {\r\n  const result = await axios.delete(\r\n    `https://6129fa91068adf001789b9d3.mockapi.io/contacts/${id}`,\r\n  );\r\n\r\n  return result.data;\r\n});\r\n\r\nconst contactsSlice = createSlice({\r\n  name: 'contacts',\r\n  initialState: itemsInitialState,\r\n  extraReducers: {\r\n    [getContacts.fulfilled]: (state, { payload }) => ({\r\n      ...state,\r\n      items: payload,\r\n      status: null,\r\n      error: null,\r\n    }),\r\n    [getContacts.pending]: (state, _) => ({\r\n      ...state,\r\n      status: 'loading',\r\n      error: null,\r\n    }),\r\n    [getContacts.rejected]: (state, { error }) => ({\r\n      ...state,\r\n      status: 'error',\r\n      error: error.message,\r\n    }),\r\n    [addContact.fulfilled]: (state, { payload }) => {\r\n      if (payload) {\r\n        toast.success(`Контакт ${payload.name} добавлен`);\r\n        return {\r\n          ...state,\r\n          items: [...state.items, payload],\r\n          status: null,\r\n          error: null,\r\n        };\r\n      }\r\n      return state;\r\n    },\r\n    [addContact.pending]: (state, _) => ({\r\n      ...state,\r\n      status: 'adding',\r\n      error: null,\r\n    }),\r\n    [addContact.rejected]: (state, { error }) => ({\r\n      ...state,\r\n      status: 'error',\r\n      error: error.message,\r\n    }),\r\n    [deleteContact.fulfilled]: (state, { payload }) => {\r\n      toast.success(`Контакт ${payload.name} удален`);\r\n      return {\r\n        ...state,\r\n        items: state.items.filter(contact => contact.id !== payload.id),\r\n        status: null,\r\n        error: null,\r\n      };\r\n    },\r\n    [deleteContact.pending]: (state, _) => ({\r\n      ...state,\r\n      status: 'deleting',\r\n      error: null,\r\n    }),\r\n    [deleteContact.rejected]: (state, { error }) => ({\r\n      ...state,\r\n      status: 'error',\r\n      error: error.message,\r\n    }),\r\n  },\r\n});\r\n\r\nconst filterSlice = createSlice({\r\n  name: 'filter',\r\n  initialState: filterInitialState,\r\n  reducers: {\r\n    filterContacts(_, { payload }) {\r\n      return payload;\r\n    },\r\n  },\r\n});\r\n\r\nconst contacts = contactsSlice.reducer;\r\nconst filter = filterSlice.reducer;\r\n\r\nexport const { filterContacts } = filterSlice.actions;\r\nexport { contacts, filter };\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport { combineReducers } from 'redux';\r\nimport { contacts, filter } from 'redux/phonebook/phonebook-slices';\r\n\r\nconst phonebookReducer = combineReducers({\r\n  contacts,\r\n  filter,\r\n});\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    phonebook: phonebookReducer,\r\n  },\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nexport { store };\r\n","import styled from '@emotion/styled/macro';\r\n\r\nconst CustomContainer = styled.div`\r\n  padding: 20px;\r\n`;\r\n\r\nexport default CustomContainer;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport CustomContainer from 'Components/Container/Container.styled';\r\n\r\nfunction Container({ children }) {\r\n  return <CustomContainer>{children}</CustomContainer>;\r\n}\r\n\r\nContainer.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Container;\r\n","import styled from '@emotion/styled/macro';\r\n\r\nconst CustomForm = styled.form`\r\n  border: 2px solid black;\r\n  border-radius: 3px;\r\n  padding: 10px;\r\n  width: 300px;\r\n\r\n  & button {\r\n    margin-top: 10px;\r\n  }\r\n\r\n  & label,\r\n  input {\r\n    display: block;\r\n  }\r\n`;\r\n\r\nexport default CustomForm;\r\n","import { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { addContact } from 'redux/phonebook/phonebook-slices';\r\nimport CustomForm from './Form.styled';\r\n\r\nexport default function Form() {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handleChange = e => {\r\n    const { id, value } = e.target;\r\n    switch (id) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    const newContact = { name: name, number: number };\r\n    dispatch(addContact(newContact));\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  return (\r\n    <CustomForm onSubmit={handleSubmit}>\r\n      <label htmlFor=\"name\">Name</label>\r\n      <input\r\n        type=\"text\"\r\n        name=\"name\"\r\n        id=\"name\"\r\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n        required\r\n        value={name}\r\n        onChange={handleChange}\r\n      />\r\n      <label htmlFor=\"number\">Phone</label>\r\n\r\n      <input\r\n        type=\"text\"\r\n        name=\"number\"\r\n        id=\"number\"\r\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n        required\r\n        value={number}\r\n        onChange={handleChange}\r\n      />\r\n      <button type=\"submit\">Add Contact</button>\r\n    </CustomForm>\r\n  );\r\n}\r\n","import { createSelector } from 'reselect';\r\n\r\nexport const getItems = state => state.phonebook.contacts.items;\r\nexport const getFilter = state => state.phonebook.filter;\r\nexport const getStatus = state => state.phonebook.contacts.status;\r\nexport const getError = state => state.phonebook.contacts.error;\r\n\r\nexport const getVisibleContacts = createSelector(\r\n  [getItems, getFilter],\r\n  (items, filter) => {\r\n    const normalizedFilter = filter.toLowerCase();\r\n    return items.filter(contact =>\r\n      contact.name.toLowerCase().includes(normalizedFilter),\r\n    );\r\n  },\r\n);\r\n","import styled from '@emotion/styled/macro';\r\n\r\nconst CustomContactList = styled.ul`\r\n  padding: 10px;\r\n  width: 400px;\r\n  list-style-type: square;\r\n`;\r\n\r\nexport default CustomContactList;\r\n","import styled from '@emotion/styled/macro';\r\n\r\nconst ListContactEl = styled.li`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  &:not(:last-child) {\r\n    margin-bottom: 10px;\r\n  }\r\n`;\r\n\r\nexport default ListContactEl;\r\n","import { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport Loader from 'react-loader-spinner';\r\nimport { deleteContact } from 'redux/phonebook/phonebook-slices';\r\nimport ListContactEl from './ContactItem.styled';\r\n\r\nfunction ContactItem({ contact }) {\r\n  const [isDeleting, setIsDeleting] = useState(false);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleDelete = () => {\r\n    setIsDeleting(true);\r\n    dispatch(deleteContact(contact.id));\r\n  };\r\n  return (\r\n    <ListContactEl>\r\n      <span>\r\n        {contact.name}: {contact.number}\r\n      </span>\r\n      <button type=\"button\" onClick={handleDelete}>\r\n        {isDeleting ? (\r\n          <Loader type=\"Bars\" color=\"#000000\" height={12} width={12} />\r\n        ) : (\r\n          'Delete'\r\n        )}\r\n      </button>\r\n    </ListContactEl>\r\n  );\r\n}\r\n\r\nexport default ContactItem;\r\n","import { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getContacts } from 'redux/phonebook/phonebook-slices';\r\nimport {\r\n  getVisibleContacts,\r\n  getStatus,\r\n  getError,\r\n} from 'redux/phonebook/phonebook-selectors';\r\nimport Loader from 'react-loader-spinner';\r\nimport CustomContactList from './ContactList.styled';\r\nimport ContactItem from 'Components/ContactItem/ContactItem';\r\n\r\nexport default function ContactList() {\r\n  const contacts = useSelector(getVisibleContacts);\r\n  const status = useSelector(getStatus);\r\n  const error = useSelector(getError);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getContacts());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <CustomContactList>\r\n      {status === 'loading' && <Loader color=\"#757575\" />}\r\n      {status === 'error' && (\r\n        <p>\r\n          <b>Oopps...something went wrong: </b>\r\n          {error}\r\n        </p>\r\n      )}\r\n      {contacts &&\r\n        !error &&\r\n        contacts.map(contact => (\r\n          <ContactItem key={contact.id} contact={contact} />\r\n        ))}\r\n    </CustomContactList>\r\n  );\r\n}\r\n","import styled from '@emotion/styled/macro';\r\n\r\nconst FilterContainer = styled.div`\r\n  border: 1px dashed black;\r\n  padding: 10px;\r\n  width: 300px;\r\n  border-radius: 3px;\r\n`;\r\n\r\nexport default FilterContainer;\r\n","import React from 'react';\r\nimport shortid from 'shortid';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { filterContacts } from 'redux/phonebook/phonebook-slices';\r\nimport { getFilter } from 'redux/phonebook/phonebook-selectors';\r\nimport FilterContainer from './Filter.styled';\r\n\r\nconst customId = shortid.generate();\r\n\r\nexport default function Filter() {\r\n  const value = useSelector(getFilter);\r\n  const dispatch = useDispatch();\r\n  const onChange = event => dispatch(filterContacts(event.target.value));\r\n\r\n  return (\r\n    <FilterContainer>\r\n      <label>\r\n        Find contact by name\r\n        <input\r\n          id={customId}\r\n          value={value}\r\n          onChange={onChange}\r\n          name=\"filter\"\r\n        ></input>\r\n      </label>\r\n    </FilterContainer>\r\n  );\r\n}\r\n","// import { useState, useEffect } from 'react';\nimport { Toaster } from 'react-hot-toast';\nimport './App.css';\nimport Container from 'Components/Container';\nimport Form from 'Components/Form';\nimport ContactList from 'Components/ContactList';\nimport Filter from 'Components/Filter';\n\n// const useLocalStorage = (key, initialValue) => {\n//   const [state, setState] = useState(() => {\n//     return JSON.parse(window.localStorage.getItem(key)) ?? initialValue;\n//   });\n\n//   useEffect(() => {\n//     window.localStorage.setItem(key, JSON.stringify(state));\n//   }, [key, state]);\n\n//   return [state, setState];\n// };\n\nfunction App() {\n  return (\n    <Container>\n      <h1>Phonebook</h1>\n      <Form />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n      <Toaster />\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { store } from 'redux/store';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}